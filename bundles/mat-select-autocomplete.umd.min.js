!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@angular/common"),require("@angular/material/icon"),require("@angular/material/select"),require("@angular/material/form-field"),require("@angular/material/button"),require("@angular/material/checkbox")):"function"==typeof define&&define.amd?define("mat-select-autocomplete",["exports","@angular/core","@angular/forms","@angular/common","@angular/material/icon","@angular/material/select","@angular/material/form-field","@angular/material/button","@angular/material/checkbox"],t):t((e=e||self)["mat-select-autocomplete"]={},e.ng.core,e.ng.forms,e.ng.common,e.ng.material.icon,e.ng.material.select,e.ng.material.formField,e.ng.material.button,e.ng.material.checkbox)}(this,(function(e,t,n,i,l,o,r,s,a){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function c(e,t,n,i){var l,o=arguments.length,r=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(l=e[s])&&(r=(o<3?l(r):o>3?l(t,n,r):l(t,n))||r);return o>3&&r&&Object.defineProperty(t,n,r),r}function p(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}var u=function(){function e(){}return e.ɵprov=t["ɵɵdefineInjectable"]({factory:function(){return new e},token:e,providedIn:"root"}),e=c([t.Injectable({providedIn:"root"}),p("design:paramtypes",[])],e)}(),d=function(){function e(){this.selectPlaceholder="search...",this.disabled=!1,this.display="display",this.value="value",this.formControl=new n.FormControl,this.errorMsg="Field is required",this.showErrorMsg=!1,this.multiple=!0,this.labelCount=1,this.appearance="standard",this.selectionChange=new t.EventEmitter,this.filteredOptions=[],this.selectedValue=[],this.selectAllChecked=!1,this.displayString=""}return e.prototype.ngOnChanges=function(){this.disabled?this.formControl.disable():this.formControl.enable(),this.filteredOptions=this.options,this.selectedOptions?this.selectedValue=this.selectedOptions:this.formControl.value&&(this.selectedValue=this.formControl.value)},e.prototype.ngDoCheck=function(){this.selectedValue.length||this.selectionChange.emit(this.selectedValue)},e.prototype.toggleDropdown=function(){this.selectElem.toggle()},e.prototype.toggleSelectAll=function(e){var t=this;if(e.checked)this.filteredOptions.forEach((function(e){t.selectedValue.includes(e[t.value])||(t.selectedValue=t.selectedValue.concat([e[t.value]]))}));else{var n=this.getFilteredOptionsValues();this.selectedValue=this.selectedValue.filter((function(e){return!n.includes(e)}))}this.selectionChange.emit(this.selectedValue)},e.prototype.filterItem=function(e){var t=this;this.filteredOptions=this.options.filter((function(n){return n[t.display].toLowerCase().indexOf(e.toLowerCase())>-1})),this.selectAllChecked=!0,this.filteredOptions.forEach((function(e){t.selectedValue.includes(e[t.value])||(t.selectAllChecked=!1)})),this.filteredOptions.length||(this.selectAllChecked=!1)},e.prototype.hideOption=function(e){return!(this.filteredOptions.indexOf(e)>-1)},e.prototype.getFilteredOptionsValues=function(){var e=[];return this.filteredOptions.forEach((function(t){e.push(t.value)})),e},e.prototype.onDisplayString=function(){var e=this;if(this.displayString="",this.selectedValue&&this.selectedValue.length){var t=[];if(this.multiple){for(var n=function(n){t[n]=i.options.filter((function(t){return t[e.value]===e.selectedValue[n]}))[0]},i=this,l=0;l<this.labelCount;l++)n(l);if(t.length){for(l=0;l<t.length;l++)t[l]&&t[l][this.display]&&(this.displayString+=t[l][this.display]+",");this.displayString=this.displayString.slice(0,-1),this.selectedValue.length>1&&this.selectedValue.length>this.labelCount&&(this.displayString=(this.displayString.length>45?this.displayString.substr(0,44)+"...":this.displayString)+" (y "+(this.selectedValue.length-this.labelCount)+" más)")}}else(t=this.options.filter((function(t){return t[e.value]===e.selectedValue}))).length&&(this.displayString=t[0][this.display])}return this.displayString},e.prototype.onSelectionChange=function(e){var t=this.getFilteredOptionsValues(),n=0;this.multiple&&(this.selectedValue.filter((function(e){t.includes(e)&&n++})),this.selectAllChecked=n===this.filteredOptions.length),this.selectedValue=e.value,this.selectionChange.emit(this.selectedValue)},e.prototype.trackByFn=function(e,t){return t.value},c([t.Input(),p("design:type",Object)],e.prototype,"selectPlaceholder",void 0),c([t.Input(),p("design:type",String)],e.prototype,"placeholder",void 0),c([t.Input(),p("design:type",Object)],e.prototype,"options",void 0),c([t.Input(),p("design:type",Object)],e.prototype,"disabled",void 0),c([t.Input(),p("design:type",Object)],e.prototype,"display",void 0),c([t.Input(),p("design:type",Object)],e.prototype,"value",void 0),c([t.Input(),p("design:type",n.FormControl)],e.prototype,"formControl",void 0),c([t.Input(),p("design:type",Object)],e.prototype,"errorMsg",void 0),c([t.Input(),p("design:type",Object)],e.prototype,"showErrorMsg",void 0),c([t.Input(),p("design:type",Object)],e.prototype,"selectedOptions",void 0),c([t.Input(),p("design:type",Object)],e.prototype,"multiple",void 0),c([t.Input(),p("design:type",Object)],e.prototype,"labelCount",void 0),c([t.Input(),p("design:type",String)],e.prototype,"appearance",void 0),c([t.Output(),p("design:type",t.EventEmitter)],e.prototype,"selectionChange",void 0),c([t.ViewChild("selectElem",{static:!0}),p("design:type",Object)],e.prototype,"selectElem",void 0),e=c([t.Component({selector:"mat-select-autocomplete",template:'\n    <mat-form-field appearance="{{ appearance }}">\n      <mat-select\n        #selectElem\n        [placeholder]="placeholder"\n        [formControl]="formControl"\n        [multiple]="multiple"\n        [(ngModel)]="selectedValue"\n        (selectionChange)="onSelectionChange($event)"\n      >\n        <div class="box-search">\n          <mat-checkbox\n            *ngIf="multiple"\n            color="primary"\n            class="box-select-all"\n            [(ngModel)]="selectAllChecked"\n            (change)="toggleSelectAll($event)"\n          ></mat-checkbox>\n          <input\n            #searchInput\n            type="text"\n            [ngClass]="{ \'pl-1\': !multiple }"\n            (input)="filterItem(searchInput.value)"\n            [placeholder]="selectPlaceholder"\n          />\n          <div\n            class="box-search-icon"\n            (click)="filterItem(\'\'); searchInput.value = \'\'"\n          >\n            <button mat-icon-button class="search-button">\n              <mat-icon class="mat-24" aria-label="Search icon">clear</mat-icon>\n            </button>\n          </div>\n        </div>\n        <mat-select-trigger>\n          {{ onDisplayString() }}\n        </mat-select-trigger>\n        <mat-option\n          *ngFor="let option of options; trackBy: trackByFn"\n          [disabled]="option.disabled"\n          [value]="option[value]"\n          [style.display]="hideOption(option) ? \'none\' : \'flex\'"\n          >{{ option[display] }}\n        </mat-option>\n      </mat-select>\n      <mat-hint style="color:red" *ngIf="showErrorMsg">{{ errorMsg }}</mat-hint>\n    </mat-form-field>\n  ',styles:["\n      .box-search {\n        margin: 8px;\n        border-radius: 2px;\n        box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.16),\n          0 0 0 1px rgba(0, 0, 0, 0.08);\n        transition: box-shadow 200ms cubic-bezier(0.4, 0, 0.2, 1);\n        display: flex;\n      }\n      .box-search input {\n        flex: 1;\n        border: none;\n        outline: none;\n      }\n      .box-select-all {\n        width: 36px;\n        line-height: 33px;\n        color: #808080;\n        text-align: center;\n      }\n      .search-button {\n        width: 36px;\n        height: 36px;\n        line-height: 33px;\n        color: #808080;\n      }\n      .pl-1 {\n        padding-left: 1rem;\n      }\n    "]}),p("design:paramtypes",[])],e)}(),h=function(){function e(){}return e=c([t.NgModule({imports:[n.FormsModule,i.CommonModule,l.MatIconModule,s.MatButtonModule,o.MatSelectModule,a.MatCheckboxModule,r.MatFormFieldModule,n.ReactiveFormsModule],declarations:[d],exports:[d]})],e)}();e.SelectAutocompleteComponent=d,e.SelectAutocompleteModule=h,e.SelectAutocompleteService=u,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=mat-select-autocomplete.umd.min.js.map