{"version":3,"file":"mat-select-autocomplete.umd.js","sources":["ng://mat-select-autocomplete/lib/select-autocomplete.service.ts","ng://mat-select-autocomplete/lib/select-autocomplete.component.ts","ng://mat-select-autocomplete/lib/select-autocomplete.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelectAutocompleteService {\n\n  constructor() { }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  ViewChild,\n  DoCheck\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'mat-select-autocomplete',\n  template: `\n    <mat-form-field appearance=\"{{ appearance }}\">\n      <mat-select\n        #selectElem\n        [placeholder]=\"placeholder\"\n        [formControl]=\"formControl\"\n        [multiple]=\"multiple\"\n        [(ngModel)]=\"selectedValue\"\n        (selectionChange)=\"onSelectionChange($event)\"\n        disableOptionCentering=\"disableOptionCentering\"\n      >\n        <div class=\"box-search\">\n          <mat-checkbox\n            *ngIf=\"multiple\"\n            color=\"primary\"\n            class=\"box-select-all\"\n            [(ngModel)]=\"selectAllChecked\"\n            (change)=\"toggleSelectAll($event)\"\n          ></mat-checkbox>\n          <input\n            #searchInput\n            type=\"text\"\n            [ngClass]=\"{ 'pl-1': !multiple }\"\n            (input)=\"filterItem(searchInput.value)\"\n            [placeholder]=\"selectPlaceholder\"\n          />\n          <div\n            class=\"box-search-icon\"\n            (click)=\"filterItem(''); searchInput.value = ''\"\n          >\n            <button mat-icon-button class=\"search-button\">\n              <mat-icon class=\"mat-24\" aria-label=\"Search icon\">clear</mat-icon>\n            </button>\n          </div>\n        </div>\n        <mat-select-trigger>\n          {{ onDisplayString() }}\n        </mat-select-trigger>\n        <mat-option\n          *ngFor=\"let option of options; trackBy: trackByFn\"\n          [disabled]=\"option.disabled\"\n          [value]=\"option[value]\"\n          [style.display]=\"hideOption(option) ? 'none' : 'flex'\"\n          >{{ option[display] }}\n        </mat-option>\n      </mat-select>\n      <mat-hint style=\"color:red\" *ngIf=\"showErrorMsg\">{{ errorMsg }}</mat-hint>\n    </mat-form-field>\n  `,\n  styles: [\n    `\n      .box-search {\n        margin: 8px;\n        border-radius: 2px;\n        box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.16),\n          0 0 0 1px rgba(0, 0, 0, 0.08);\n        transition: box-shadow 200ms cubic-bezier(0.4, 0, 0.2, 1);\n        display: flex;\n      }\n      .box-search input {\n        flex: 1;\n        border: none;\n        outline: none;\n      }\n      .box-select-all {\n        width: 36px;\n        line-height: 33px;\n        color: #808080;\n        text-align: center;\n      }\n      .search-button {\n        width: 36px;\n        height: 36px;\n        line-height: 33px;\n        color: #808080;\n      }\n      .pl-1 {\n        padding-left: 1rem;\n      }\n    `\n  ]\n})\nexport class SelectAutocompleteComponent implements OnChanges, DoCheck {\n  @Input() selectPlaceholder = 'search...';\n  @Input() placeholder: string;\n  @Input() options;\n  @Input() disabled = false;\n  @Input() display = 'display';\n  @Input() value = 'value';\n  @Input() formControl: FormControl = new FormControl();\n  @Input() errorMsg = 'Field is required';\n  @Input() showErrorMsg = false;\n  @Input() selectedOptions;\n  @Input() multiple = true;\n\n  // New Options\n  @Input() labelCount = 1;\n  @Input() appearance: 'standard' | 'fill' | 'outline' = 'standard';\n  @Input() disableOptionCentering = false;\n\n  @Output()\n  selectionChange: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild('selectElem', { static: true }) selectElem;\n\n  filteredOptions: Array<any> = [];\n  selectedValue: Array<any> = [];\n  selectAllChecked = false;\n  displayString = '';\n  constructor() {}\n\n  ngOnChanges() {\n    if (this.disabled) {\n      this.formControl.disable();\n    } else {\n      this.formControl.enable();\n    }\n    this.filteredOptions = this.options;\n    if (this.selectedOptions) {\n      this.selectedValue = this.selectedOptions;\n    } else if (this.formControl.value) {\n      this.selectedValue = this.formControl.value;\n    }\n  }\n\n  ngDoCheck() {\n    if (!this.selectedValue.length) {\n      this.selectionChange.emit(this.selectedValue);\n    }\n  }\n\n  toggleDropdown() {\n    this.selectElem.toggle();\n  }\n\n  toggleSelectAll(val) {\n    if (val.checked) {\n      this.filteredOptions.forEach(option => {\n        if (!this.selectedValue.includes(option[this.value])) {\n          this.selectedValue = this.selectedValue.concat([option[this.value]]);\n        }\n      });\n    } else {\n      const filteredValues = this.getFilteredOptionsValues();\n      this.selectedValue = this.selectedValue.filter(\n        item => !filteredValues.includes(item)\n      );\n    }\n    this.selectionChange.emit(this.selectedValue);\n  }\n\n  filterItem(value) {\n    this.filteredOptions = this.options.filter(\n      item => item[this.display].toLowerCase().localeCompare(value.toLowerCase()) > -1\n    );\n    this.selectAllChecked = true;\n    this.filteredOptions.forEach(item => {\n      if (this.multiple && !this.selectedValue.includes(item[this.value])) {\n        this.selectAllChecked = false;\n      }\n    });\n    if (!this.filteredOptions.length) {\n      this.selectAllChecked = false;\n    }\n  }\n\n  hideOption(option) {\n    return !(this.filteredOptions.indexOf(option) > -1);\n  }\n\n  // Returns plain strings array of filtered values\n  getFilteredOptionsValues() {\n    const filteredValues = [];\n    this.filteredOptions.forEach(option => {\n      filteredValues.push(option.value);\n    });\n    return filteredValues;\n  }\n\n  onDisplayString() {\n    this.displayString = '';\n    // console.log('Valor seleccionado: ' + this.selectedValue);\n    if (this.selectedValue) {\n      // console.log('Entra aquí.');\n      let displayOption = [];\n      if (this.multiple) {\n        // console.log('Multiple');\n        // Multi select display\n        for (let i = 0; i < this.labelCount; i++) {\n          displayOption[i] = this.options.filter(\n            option => option[this.value] === this.selectedValue[i]\n          )[0];\n        }\n        if (displayOption.length) {\n          for (let i = 0; i < displayOption.length; i++) {\n            if (displayOption[i] && displayOption[i][this.display]) {\n              this.displayString += displayOption[i][this.display] + ',';\n            }\n          }\n          this.displayString = this.displayString.slice(0, -1);\n          if (\n            this.selectedValue.length > 1 &&\n            this.selectedValue.length > this.labelCount\n          ) {\n            // Se muestran unos pocos elementos de los seleccionados y se mencionan\n            // que existen n más.\n            this.displayString =\n              (\n                (this.displayString.length > 45) ?\n                  this.displayString.substr(0, 45 - 1) + '...' :\n                  this.displayString\n              ) + ` (y ${this.selectedValue.length - this.labelCount} más)`;\n          }\n        }\n      } else {\n        // console.log('Single');\n        // Single select display\n        displayOption = this.options.filter(\n          option => option[this.value] === this.selectedValue\n        );\n        if (displayOption.length) {\n          this.displayString = displayOption[0][this.display];\n        }\n      }\n    }\n    return this.displayString;\n  }\n\n  onSelectionChange(val) {\n    const filteredValues = this.getFilteredOptionsValues();\n    let count = 0;\n    if (this.multiple) {\n      this.selectedValue.filter(item => {\n        if (filteredValues.includes(item)) {\n          count++;\n        }\n      });\n      this.selectAllChecked = count === this.filteredOptions.length;\n    }\n    this.selectedValue = val.value;\n    this.selectionChange.emit(this.selectedValue);\n  }\n\n  public trackByFn(index, item) {\n    return item.value;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { SelectAutocompleteComponent } from './select-autocomplete.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [SelectAutocompleteComponent],\n  exports: [SelectAutocompleteComponent]\n})\nexport class SelectAutocompleteModule { }\n"],"names":["Injectable","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵtext","i0.ɵɵstyleProp","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵtextInterpolate","FormControl","EventEmitter","i0.ɵɵtemplate","i0.ɵɵpropertyInterpolate","Component","Input","Output","ViewChild","FormsModule","CommonModule","MatIconModule","MatButtonModule","MatSelectModule","MatCheckboxModule","MatFormFieldModule","ReactiveFormsModule","NgModule"],"mappings":"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"}