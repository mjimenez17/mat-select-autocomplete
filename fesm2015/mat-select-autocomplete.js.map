{"version":3,"file":"mat-select-autocomplete.js","sources":["ng://mat-select-autocomplete/lib/select-autocomplete.service.ts","ng://mat-select-autocomplete/lib/select-autocomplete.component.ts","ng://mat-select-autocomplete/lib/select-autocomplete.module.ts","ng://mat-select-autocomplete/public_api.ts","ng://mat-select-autocomplete/mat-select-autocomplete.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SelectAutocompleteService {\r\n\r\n  constructor() { }\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  ViewChild,\r\n  DoCheck\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'mat-select-autocomplete',\r\n  template: `\r\n    <mat-form-field appearance=\"{{ appearance }}\">\r\n      <mat-select\r\n        #selectElem\r\n        [placeholder]=\"placeholder\"\r\n        [formControl]=\"formControl\"\r\n        [multiple]=\"multiple\"\r\n        [(ngModel)]=\"selectedValue\"\r\n        (selectionChange)=\"onSelectionChange($event)\"\r\n      >\r\n        <div class=\"box-search\">\r\n          <mat-checkbox\r\n            *ngIf=\"multiple\"\r\n            color=\"primary\"\r\n            class=\"box-select-all\"\r\n            [(ngModel)]=\"selectAllChecked\"\r\n            (change)=\"toggleSelectAll($event)\"\r\n          ></mat-checkbox>\r\n          <input\r\n            #searchInput\r\n            type=\"text\"\r\n            [ngClass]=\"{ 'pl-1': !multiple }\"\r\n            (input)=\"filterItem(searchInput.value)\"\r\n            [placeholder]=\"selectPlaceholder\"\r\n          />\r\n          <div\r\n            class=\"box-search-icon\"\r\n            (click)=\"filterItem(''); searchInput.value = ''\"\r\n          >\r\n            <button mat-icon-button class=\"search-button\">\r\n              <mat-icon class=\"mat-24\" aria-label=\"Search icon\">clear</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <mat-select-trigger>\r\n          {{ onDisplayString() }}\r\n        </mat-select-trigger>\r\n        <mat-option\r\n          *ngFor=\"let option of options; trackBy: trackByFn\"\r\n          [disabled]=\"option.disabled\"\r\n          [value]=\"option[value]\"\r\n          [style.display]=\"hideOption(option) ? 'none' : 'flex'\"\r\n          >{{ option[display] }}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-hint style=\"color:red\" *ngIf=\"showErrorMsg\">{{ errorMsg }}</mat-hint>\r\n    </mat-form-field>\r\n  `,\r\n  styles: [\r\n    `\r\n      .box-search {\r\n        margin: 8px;\r\n        border-radius: 2px;\r\n        box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.16),\r\n          0 0 0 1px rgba(0, 0, 0, 0.08);\r\n        transition: box-shadow 200ms cubic-bezier(0.4, 0, 0.2, 1);\r\n        display: flex;\r\n      }\r\n      .box-search input {\r\n        flex: 1;\r\n        border: none;\r\n        outline: none;\r\n      }\r\n      .box-select-all {\r\n        width: 36px;\r\n        line-height: 33px;\r\n        color: #808080;\r\n        text-align: center;\r\n      }\r\n      .search-button {\r\n        width: 36px;\r\n        height: 36px;\r\n        line-height: 33px;\r\n        color: #808080;\r\n      }\r\n      .pl-1 {\r\n        padding-left: 1rem;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class SelectAutocompleteComponent implements OnChanges, DoCheck {\r\n  @Input() selectPlaceholder = 'search...';\r\n  @Input() placeholder: string;\r\n  @Input() options;\r\n  @Input() disabled = false;\r\n  @Input() display = 'display';\r\n  @Input() value = 'value';\r\n  @Input() formControl: FormControl = new FormControl();\r\n  @Input() errorMsg = 'Field is required';\r\n  @Input() showErrorMsg = false;\r\n  @Input() selectedOptions;\r\n  @Input() multiple = true;\r\n\r\n  // New Options\r\n  @Input() labelCount = 1;\r\n  @Input() appearance: 'standard' | 'fill' | 'outline' = 'standard';\r\n\r\n  @Output()\r\n  selectionChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ViewChild('selectElem', { static: true }) selectElem;\r\n\r\n  filteredOptions: Array<any> = [];\r\n  selectedValue: Array<any> = [];\r\n  selectAllChecked = false;\r\n  displayString = '';\r\n  constructor() {}\r\n\r\n  ngOnChanges() {\r\n    if (this.disabled) {\r\n      this.formControl.disable();\r\n    } else {\r\n      this.formControl.enable();\r\n    }\r\n    this.filteredOptions = this.options;\r\n    if (this.selectedOptions) {\r\n      this.selectedValue = this.selectedOptions;\r\n    } else if (this.formControl.value) {\r\n      this.selectedValue = this.formControl.value;\r\n    }\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (!this.selectedValue.length) {\r\n      this.selectionChange.emit(this.selectedValue);\r\n    }\r\n  }\r\n\r\n  toggleDropdown() {\r\n    this.selectElem.toggle();\r\n  }\r\n\r\n  toggleSelectAll(val) {\r\n    if (val.checked) {\r\n      this.filteredOptions.forEach(option => {\r\n        if (!this.selectedValue.includes(option[this.value])) {\r\n          this.selectedValue = this.selectedValue.concat([option[this.value]]);\r\n        }\r\n      });\r\n    } else {\r\n      const filteredValues = this.getFilteredOptionsValues();\r\n      this.selectedValue = this.selectedValue.filter(\r\n        item => !filteredValues.includes(item)\r\n      );\r\n    }\r\n    this.selectionChange.emit(this.selectedValue);\r\n  }\r\n\r\n  filterItem(value) {\r\n    this.filteredOptions = this.options.filter(\r\n      item => item[this.display].toLowerCase().indexOf(value.toLowerCase()) > -1\r\n    );\r\n    this.selectAllChecked = true;\r\n    this.filteredOptions.forEach(item => {\r\n      if (!this.selectedValue.includes(item[this.value])) {\r\n        this.selectAllChecked = false;\r\n      }\r\n    });\r\n    if (!this.filteredOptions.length) {\r\n      this.selectAllChecked = false;\r\n    }\r\n  }\r\n\r\n  hideOption(option) {\r\n    return !(this.filteredOptions.indexOf(option) > -1);\r\n  }\r\n\r\n  // Returns plain strings array of filtered values\r\n  getFilteredOptionsValues() {\r\n    const filteredValues = [];\r\n    this.filteredOptions.forEach(option => {\r\n      filteredValues.push(option.value);\r\n    });\r\n    return filteredValues;\r\n  }\r\n\r\n  onDisplayString() {\r\n    this.displayString = '';\r\n    if (this.selectedValue && this.selectedValue.length) {\r\n      let displayOption = [];\r\n      if (this.multiple) {\r\n        // Multi select display\r\n        for (let i = 0; i < this.labelCount; i++) {\r\n          displayOption[i] = this.options.filter(\r\n            option => option[this.value] === this.selectedValue[i]\r\n          )[0];\r\n        }\r\n        if (displayOption.length) {\r\n          for (let i = 0; i < displayOption.length; i++) {\r\n            if (displayOption[i] && displayOption[i][this.display]) {\r\n              this.displayString += displayOption[i][this.display] + ',';\r\n            }\r\n          }\r\n          this.displayString = this.displayString.slice(0, -1);\r\n          if (\r\n            this.selectedValue.length > 1 &&\r\n            this.selectedValue.length > this.labelCount\r\n          ) {\r\n            // Se muestran unos pocos elementos de los seleccionados y se mencionan\r\n            // que existen n más.\r\n            this.displayString =\r\n              (\r\n                (this.displayString.length > 45) ?\r\n                  this.displayString.substr(0, 45 - 1) + '...' :\r\n                  this.displayString\r\n              ) + ` (y ${this.selectedValue.length - this.labelCount} más)`;\r\n          }\r\n        }\r\n      } else {\r\n        // Single select display\r\n        displayOption = this.options.filter(\r\n          option => option[this.value] === this.selectedValue\r\n        );\r\n        if (displayOption.length) {\r\n          this.displayString = displayOption[0][this.display];\r\n        }\r\n      }\r\n    }\r\n    return this.displayString;\r\n  }\r\n\r\n  onSelectionChange(val) {\r\n    const filteredValues = this.getFilteredOptionsValues();\r\n    let count = 0;\r\n    if (this.multiple) {\r\n      this.selectedValue.filter(item => {\r\n        if (filteredValues.includes(item)) {\r\n          count++;\r\n        }\r\n      });\r\n      this.selectAllChecked = count === this.filteredOptions.length;\r\n    }\r\n    this.selectedValue = val.value;\r\n    this.selectionChange.emit(this.selectedValue);\r\n  }\r\n\r\n  public trackByFn(index, item) {\r\n    return item.value;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { SelectAutocompleteComponent } from './select-autocomplete.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [SelectAutocompleteComponent],\r\n  exports: [SelectAutocompleteComponent]\r\n})\r\nexport class SelectAutocompleteModule { }\r\n","/*\r\n * Public API Surface of select-autocomplete\r\n */\r\n\r\nexport * from './lib/select-autocomplete.service';\r\nexport * from './lib/select-autocomplete.component';\r\nexport * from './lib/select-autocomplete.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}